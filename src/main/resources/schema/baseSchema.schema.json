{
  "$id": "/schema/baseSchema",
  "type": "object",
  "properties": {
    "file_reference": {
      "type": "string",
      "minLength": 1,
      "maxLength": 6,
      "alternateKeys": [
        {
          "tdrFileHeader": "FileReference"
        }
      ],
      "tdrDescription": null
    },
    "UUID": {
      "type": "string",
      "format": "uuid",
      "alternateKeys": [
        {
          "tdrFileHeader": "FileReference"
        }
      ],
      "message": {
        "format": "uuid must be a valid UUID"
      },
      "Emma Says": "This is a system generated field, not sure what we should say back to users if this fails"
    },
    "file_path": {
      "type": [
        "string",
        "null"
      ],
      "alternateKeys": [
        {
          "tdrFileHeader": "Filepath"
        }
      ],
      "fileExistsError": "This file does not exist in the list of records transferred.",
      "Emma Says": "There is a filepath and a filename in the upload file, they are both system generated but not sure what to do with these"
    },
    "date_last_modified": {
      "type": "string",
      "format": "date",
      "alternateKeys": [
        {
          "tdrFileHeader": "Date last modified"
        }
      ],
      "message": {
        "format": "Date last modified must be a valid date"
      },
      "Emma Says": "This is a system generated field, not sure what we should say back to users if this fails"
    },
    "file_size": {
      "type": [
        "number",
        "null"
      ],
      "tdrName": "ClientSideFileSize",
      "tdrDescription": null
    },
    "date_created": {
      "type": [
        "string",
        "null"
      ],
      "pattern": "^$|^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$|\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
      "tdrDescription": null,
      "tdrName": "date_created"
    },
    "date_range": {
      "type": "string"
    },
    "description": {
      "type": "string",
      "maxLength": 8000,
      "message": {
        "format": "Description should be less than 8000 characters"
      },
      "Emma Says": "I also want to add a WARNING (not Error) if Description is NULL"
    },
    "end_date": {
      "type": [
        "string",
        "null"
      ],
      "format": "date",
      "message": {
        "format": "Date of the Record must be a valid date."
      },
      "Emma says": "There might be more validation that we could put on end date - is there a range that would be acceptable? not earlier than today? pick up on defaults? eg. 1/1/1980)"
    },
    "file_name_language": {
      "enum": [
        "English",
        "Welsh",
        null
      ],
      "alternateKeys": [
        {
          "tdrFileHeader": "Language"
        }
      ]
    },
    "file_name_translation": {
      "type": "string",
      "alternateKeys": [
        {
          "tdrFileHeader": "Translated title of record"
        }
      ]
    },
    "file_name_translation_language": {
      "type": "string",
      "enum": [
        "English",
        "Welsh",
        null
      ]
    },
    "file_name": {
      "type": [
        "string",
        "null"
      ],
      "alternateKeys": [
        {
          "tdrFileHeader": "Filename"
        }
      ],
      "Emma Says": "This is a system generated field, not sure what we should say back to users if this fails"
    },
    "held_by": {
      "type": "string",
      "tdrName": "HeldBy",
      "tdrDescription": null
    },
    "language": {
      "type": "string",
      "alternateKeys": [
        {
          "tdrFileHeader": "Language"
        }
      ]
    },
    "legal_status": {
      "type": "string",
      "alternateKeys": [
        {
          "tdrFileHeader": "LegalStatus"
        }
      ]
    },
    "parent_reference": {
      "type": [
        "string",
        "null"
      ],
      "alternateKeys": [
        {
          "tdrFileHeader": "ParentReference"
        }
      ]
    },
    "description_public": {
      "type": "boolean"
    },
    "description_alternate": {
      "type": [
        "string",
        "null"
      ],
      "alternateKeys": [
        {
          "tdrFileHeader": "DescriptionAlternate"
        }
      ]
    },
    "description_closed": {
      "type": "boolean",
      "alternateKeys": [
        {
          "tdrFileHeader": "DescriptionClosed"
        }
      ],
      "Emma Says": "This is inconsistent with the title_closed - they should probably be the same"
    },
    "foi_exemption_asserted": {
      "type": [
        "string",
        "null"
      ],
      "format": "date",
      "alternateKeys": [
        {
          "tdrFileHeader": "FOI decision asserted"
        }
      ],
      "message": {
        "format": "FOI decision asserted is an invalid date"
      },
      "Emma Says": "I also want to validate that this is greater than end_date - this needs to go in the relationship schema maybe? Or the closure schema?."
    },
    "foi_exemption_code": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "23",
          "24",
          "26",
          "27(1)",
          "27(2)",
          "28",
          "29",
          "30(2)",
          "31",
          "32",
          "33",
          "34",
          "35(1)(a)",
          "35(1)(b)",
          "35(1)(c)",
          "35(1)(d)",
          "36",
          "37(1)(a)",
          "37(1)(aa)",
          "37(1)(ac)",
          "37(1)(ad)",
          "37(1)(b)",
          "38",
          "39",
          "40(2)",
          "41",
          "42",
          "43",
          "43(1)",
          "43(2)",
          "44",
          "null",
          null
        ]
      },
      "alternateKeys": [
        {
          "tdrFileHeader": "FOI Exemption Code"
        }
      ],
      "message": {
        "format": "This field contains an invalid FOI Exemption Code, please refer to the list of valid FOI Exemption codes in the Help Guide"
      },
      "Emma Says": "Ideally we would be telling the user WHAT it is that they have input that is invalid."
    },
    "closure_type": {
      "default": "open_on_transfer",
      "type": "string",
      "enum": [
        "Closed",
        "closed",
        "CLOSED",
        "Open",
        "open",
        "OPEN"
      ],
      "alternateKeys": [
        {
          "tdrFileHeader": "Closure status"
        }
      ],
      "message": {
        "format": "Closure Status must be 'Open' or 'Closed'"
      },
      "Emma Says": "I'm wondering about case here,and how this gets mapped back to what is stored in the db"
    },
    "closure_period": {
      "type": [
        "number",
        "null"
      ],
      "alternateKeys": [
        {
          "tdrFileHeader": "Closure Period"
        }
      ]
    },
    "closure_start_date": {
      "type": [
        "string",
        "null"
      ],
      "format": "date",
      "alternateKeys": [
        {
          "tdrFileHeader": "Closure Start Date"
        }
      ],
      "message": {
        "format": "Closure Start Date must be a valid Date"
      },
      "Emma Says": "I intend to remove this field in the longer term and default it to end_date"
    },
    "title_closed": {
      "type": "boolean",
      "alternateKeys" : [
        {
          "tdrFileHeader" : "Is the title sensitive for the public?"
        }
      ],
      "message": {
        "format": "This must be closed"
      },
      "Emma Says": "This will be a 'Yes' or 'No', but I would like to get rid of this in future. Until then it will need a relationship schema test"
    },
    "title_alternate": {
      "type": [
        "string",
        "null"
      ],
      "alternateKeys": [
        {
          "tdrFileHeader": "Add alternative title without the file extension"
        }
      ],
      "tdrName": "TitleAlternate"
    },
    "former_reference_department": {
      "type": [
        "string",
        "null"
      ],
      "maxLength": 8000,
      "alternateKeys": [
        {
          "tdrFileHeader": "Former Reference"
        }
      ],
      "Emma Says": "When we introduce retained records, we may need to add validation here"
    },
    "file_type": {
      "type": [
        "string",
        "null"
      ],
      "alternateKeys": [
        {
          "tdrFileHeader": "States if the type is a file or folder"
        }
      ]
    }
  },
  "required": [
    "foi_exemption_asserted",
    "closure_period",
    "closure_start_date",
    "description_public",
    "description_alternate"
  ]
}


