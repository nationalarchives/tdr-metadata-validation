package uk.gov.nationalarchives.tdr.validation.schema.helpers

import uk.gov.nationalarchives.tdr.validation.schema.JsonSchemaDefinition.{BASE_SCHEMA, CLOSURE_SCHEMA_CLOSED, CLOSURE_SCHEMA_OPEN, REQUIRED_SCHEMA}
import uk.gov.nationalarchives.tdr.validation.schema.{MetadataValidationJsonSchema, ValidationError}
import uk.gov.nationalarchives.tdr.validation.{FileRow, Metadata}

object TestHelper {

  def openMetadataFileRow(
      filePath: Option[String] = Some("content/file1"),
      dateOfRecord: Option[String] = Some(""),
      description: Option[String] = Some(""),
      closureType: Option[String] = Some("Open"),
      closurePeriod: Option[String] = Some(""),
      closureStartDate: Option[String] = Some(""),
      descriptionClosed: Option[String] = Some("No"),
      foiExemptionAsserted: Option[String] = Some(""),
      foiCodes: Option[String] = Some(""),
      titleClosed: Option[String] = Some("No"),
      titleAlternative: Option[String] = Some(""),
      descriptionAlternative: Option[String] = Some(""),
      rightsCopyright: Option[String] = Some("Crown copyright"),
      // not required
      fileName: Option[String] = Some("file1"),
      dateLastModified: Option[String] = Some("2024-12-25"),
      formerReference: Option[String] = Some(""),
      language: Option[String] = Some("English"),
      translatedTitleOfRecord: Option[String] = Some(""),
      invalidColumnTitle: Option[String] = None,
      uuid: Option[String] = None
  ): FileRow = {
    metadataFileRowBuilder(
      filePath = filePath,
      dateOfRecord = dateOfRecord,
      description = description,
      closureType = closureType,
      closurePeriod = closurePeriod,
      closureStartDate = closureStartDate,
      descriptionClosed = descriptionClosed,
      foiExemptionAsserted = foiExemptionAsserted,
      foiCodes = foiCodes,
      titleClosed = titleClosed,
      titleAlternative = titleAlternative,
      descriptionAlternative = descriptionAlternative,
      rightsCopyright = rightsCopyright,
      // not required
      fileName = fileName,
      dateLastModified = dateLastModified,
      formerReference = formerReference,
      language = language,
      translatedTitleOfRecord = translatedTitleOfRecord,
      invalidColumnTitle = invalidColumnTitle,
      uuid = uuid
    )
  }

  def closedMetadataFileRow(
      filePath: Option[String] = Some("content/file1"),
      dateOfRecord: Option[String] = Some(""),
      description: Option[String] = Some(""),
      closureType: Option[String] = Some("Closed"),
      closurePeriod: Option[String] = Some("50"),
      closureStartDate: Option[String] = Some("2024-12-31"),
      descriptionClosed: Option[String] = Some("No"),
      foiExemptionAsserted: Option[String] = Some("2025-01-31"),
      foiCodes: Option[String] = Some("44"),
      titleClosed: Option[String] = Some("No"),
      titleAlternative: Option[String] = Some(""),
      descriptionAlternative: Option[String] = Some(""),
      rightsCopyright: Option[String] = Some("Crown copyright"),
      // not required
      fileName: Option[String] = Some("file1"),
      dateLastModified: Option[String] = Some("2024-12-25"),
      formerReference: Option[String] = Some(""),
      language: Option[String] = Some("English"),
      translatedTitleOfRecord: Option[String] = Some(""),
      invalidColumnTitle: Option[String] = None,
      uuid: Option[String] = None
  ): FileRow = {
    metadataFileRowBuilder(
      filePath = filePath,
      dateOfRecord = dateOfRecord,
      description = description,
      closureType = closureType,
      closurePeriod = closurePeriod,
      closureStartDate = closureStartDate,
      descriptionClosed = descriptionClosed,
      foiExemptionAsserted = foiExemptionAsserted,
      foiCodes = foiCodes,
      titleClosed = titleClosed,
      titleAlternative = titleAlternative,
      descriptionAlternative = descriptionAlternative,
      rightsCopyright = rightsCopyright,
      // not required
      fileName = fileName,
      dateLastModified = dateLastModified,
      formerReference = formerReference,
      language = language,
      translatedTitleOfRecord = translatedTitleOfRecord,
      invalidColumnTitle = invalidColumnTitle,
      uuid = uuid
    )
  }

  private def metadataFileRowBuilder(
      // required
      filePath: Option[String] = None,
      dateOfRecord: Option[String] = None,
      description: Option[String] = None,
      closureType: Option[String] = None,
      closurePeriod: Option[String] = None,
      closureStartDate: Option[String] = None,
      descriptionClosed: Option[String] = None,
      foiExemptionAsserted: Option[String] = None,
      foiCodes: Option[String] = None,
      titleClosed: Option[String] = None,
      titleAlternative: Option[String] = None,
      descriptionAlternative: Option[String] = None,
      rightsCopyRight: Option[String] = Some("Crown copyright"),
      // not required
      fileName: Option[String] = None,
      dateLastModified: Option[String] = None,
      formerReference: Option[String] = None,
      language: Option[String] = None,
      translatedTitleOfRecord: Option[String] = None,
      invalidColumnTitle: Option[String] = None,
      uuid: Option[String] = None
  ): FileRow = {
    val metadata = List(
      // required
      filePath.map(Metadata("filepath", _)), // file_path
      dateOfRecord.map(Metadata("date of the record", _)), // end_date
      description.map(Metadata("description", _)), // description
      closureType.map(Metadata("closure status", _)), // closure_type
      closurePeriod.map(Metadata("closure period", _)), // closure_period
      closureStartDate.map(Metadata("closure start date", _)), // closure_start_date
      descriptionClosed.map(Metadata("is description closed", _)), // description_closed
      foiExemptionAsserted.map(Metadata("foi schedule date", _)), // foi_exemption_asserted
      foiCodes.map(Metadata("foi exemption code", _)), // foi_exemption_code
      titleClosed.map(Metadata("is filename closed", _)), // title_closed
      titleAlternative.map(Metadata("alternate filename", _)), // title_alternative
      descriptionAlternative.map(Metadata("alternate description", _)), // description_alternate
      rightsCopyright.map(Metadata("copyright", _)), // rights_copyright
      // not required
      fileName.map(Metadata("filename", _)),
      dateLastModified.map(Metadata("date last modified", _)),
      formerReference.map(Metadata("former reference", _)),
      language.map(Metadata("language", _)),
      translatedTitleOfRecord.map(Metadata("translated filename", _)),
      invalidColumnTitle.map(Metadata("AN INVALID COLUMN TITLE", _)),
      uuid.map(Metadata("UUID", _))
    ).flatten
    FileRow("file1", metadata)
  }

  def validationErrors(testFileRow: FileRow): Seq[ValidationError] = {
    val requiredSchemaErrors = MetadataValidationJsonSchema.validate(Set(REQUIRED_SCHEMA), Seq(testFileRow))
    if (requiredSchemaErrors("file1").nonEmpty) {
      requiredSchemaErrors("file1")
    } else {
      val validationErrors: Map[String, Seq[ValidationError]] =
        MetadataValidationJsonSchema.validate(Set(REQUIRED_SCHEMA, BASE_SCHEMA, CLOSURE_SCHEMA_CLOSED, CLOSURE_SCHEMA_OPEN), Seq(testFileRow))
      validationErrors("file1")
    }
  }

  val twoHundredAndFiftyFiveCharString: String =
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345"

  val eightThousandCharString: String =
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
      "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"

}
